{"ast":null,"code":"var _jsxFileName = \"/Users/Nikul541/PostBootcampCode/fantasywebsite/src/client/components/Matchups.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Matchups = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [matchups, setMatchups] = useState([]);\n  const [week, setWeek] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.sleeper.app/v1/league/863187571134541824/matchups/{week}`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setMatchups(result);\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  let hashMap = {}; //stores the matchups of the current week\n  let totalScores = {};\n  let roster = {\n    1: 'Nikul',\n    2: 'Sanjay',\n    3: 'Kush',\n    4: 'Sam',\n    5: 'Sudeep',\n    6: 'Harsh',\n    7: 'Somith',\n    8: 'Snehansh',\n    9: 'Evan',\n    10: 'Mo',\n    11: 'Ajit',\n    12: 'Nihal'\n  };\n\n  //hashMap that stores the matchups of the current week\n  for (let i = 0; i < matchups.length; i++) {\n    let team = matchups[i];\n    if (hashMap[team.matchup_id]) {\n      hashMap[team.matchup_id].push(team.roster_id);\n    } else {\n      hashMap[team.matchup_id] = [team.roster_id];\n    }\n  }\n\n  //harshMap that stores the total scores of the current team\n  for (let i = 0; i < matchups.length; i++) {\n    let team = matchups[i];\n    const totalSum = team => {\n      let counter = 0;\n      for (let i = 0; i < team.starters_points.length; i++) {\n        counter += team.starters_points[i];\n      }\n      return counter;\n    };\n    totalScores[team.roster_id] = totalSum(team);\n  }\n  console.log('this is hashMap', hashMap);\n  console.log('this is totalScores', totalScores);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(hashMap).map(matchup => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [roster[hashMap[matchup][0]], \" scored\", ' ', totalScores[hashMap[matchup][0]], \" vs. \", roster[hashMap[matchup][1]], ' ', \"scored \", totalScores[hashMap[matchup][1]]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Matchups, \"D46keEHeaQ4i80gm6Fm2OLBfphk=\");\n_c = Matchups;\nexport default Matchups;\nvar _c;\n$RefreshReg$(_c, \"Matchups\");","map":{"version":3,"names":["React","useState","useEffect","Matchups","error","setError","isLoaded","setIsLoaded","matchups","setMatchups","week","setWeek","fetch","then","res","json","result","hashMap","totalScores","roster","i","length","team","matchup_id","push","roster_id","totalSum","counter","starters_points","console","log","Object","keys","map","matchup"],"sources":["/Users/Nikul541/PostBootcampCode/fantasywebsite/src/client/components/Matchups.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Matchups = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [matchups, setMatchups] = useState([]);\n  const [week, setWeek] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.sleeper.app/v1/league/863187571134541824/matchups/{week}`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setMatchups(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  let hashMap = {}; //stores the matchups of the current week\n  let totalScores = {};\n  let roster = {\n    1: 'Nikul',\n    2: 'Sanjay',\n    3: 'Kush',\n    4: 'Sam',\n    5: 'Sudeep',\n    6: 'Harsh',\n    7: 'Somith',\n    8: 'Snehansh',\n    9: 'Evan',\n    10: 'Mo',\n    11: 'Ajit',\n    12: 'Nihal',\n  };\n\n  //hashMap that stores the matchups of the current week\n  for (let i = 0; i < matchups.length; i++) {\n    let team = matchups[i];\n    if (hashMap[team.matchup_id]) {\n      hashMap[team.matchup_id].push(team.roster_id);\n    } else {\n      hashMap[team.matchup_id] = [team.roster_id];\n    }\n  }\n\n  //harshMap that stores the total scores of the current team\n  for (let i = 0; i < matchups.length; i++) {\n    let team = matchups[i];\n    const totalSum = (team) => {\n      let counter = 0;\n      for (let i = 0; i < team.starters_points.length; i++) {\n        counter += team.starters_points[i];\n      }\n      return counter;\n    };\n\n    totalScores[team.roster_id] = totalSum(team);\n  }\n\n  console.log('this is hashMap', hashMap);\n  console.log('this is totalScores', totalScores);\n\n  return (\n    <div>\n      {Object.keys(hashMap).map((matchup) => (\n        <h3>\n          {roster[hashMap[matchup][0]]} scored{' '}\n          {totalScores[hashMap[matchup][0]]} vs. {roster[hashMap[matchup][1]]}{' '}\n          scored {totalScores[hashMap[matchup][1]]}\n        </h3>\n      ))}\n    </div>\n  );\n};\n\nexport default Matchups;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}