{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst Matchups = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [matchups, setMatchups] = useState([]);\n  useEffect(() => {\n    fetch('https://api.sleeper.app/v1/league/863187571134541824/matchups/6').then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setMatchups(result);\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  let hashMap = {}; //stores the matchups of the current week\n  for (let i = 0; i < matchups.length; i++) {\n    let team = matchups[i];\n    if (hashMap[team.matchup_id]) {\n      hashmap[matchups[i].matchup_id].push(roster_id);\n    }\n  }\n};\n_s(Matchups, \"Qm8zhhlecIT+wilPsyfD6oshhAQ=\");\n_c = Matchups;\nexport default Matchups;\nvar _c;\n$RefreshReg$(_c, \"Matchups\");","map":{"version":3,"names":["React","useState","useEffect","Matchups","error","setError","isLoaded","setIsLoaded","matchups","setMatchups","fetch","then","res","json","result","hashMap","i","length","team","matchup_id","hashmap","push","roster_id"],"sources":["/Users/Nikul541/PostBootcampCode/fantasywebsite/src/client/components/Matchups.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Matchups = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [matchups, setMatchups] = useState([]);\n\n  useEffect(() => {\n    fetch('https://api.sleeper.app/v1/league/863187571134541824/matchups/6')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setMatchups(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  let hashMap = {} //stores the matchups of the current week\n  for (let i = 0; i < matchups.length; i++){\n    let team = matchups[i]\n    if (hashMap[team.matchup_id]){\n      hashmap[matchups[i].matchup_id].push(roster_id)\n    }\n  }\n};\n\nexport default Matchups;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,iEAAiE,CAAC,CACrEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CACFG,MAAM,IAAK;MACVP,WAAW,CAAC,IAAI,CAAC;MACjBE,WAAW,CAACK,MAAM,CAAC;IACrB,CAAC;IACD;IACA;IACA;IACCV,KAAK,IAAK;MACTG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CACF;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIW,OAAO,GAAG,CAAC,CAAC,EAAC;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,QAAQ,CAACS,MAAM,EAAED,CAAC,EAAE,EAAC;IACvC,IAAIE,IAAI,GAAGV,QAAQ,CAACQ,CAAC,CAAC;IACtB,IAAID,OAAO,CAACG,IAAI,CAACC,UAAU,CAAC,EAAC;MAC3BC,OAAO,CAACZ,QAAQ,CAACQ,CAAC,CAAC,CAACG,UAAU,CAAC,CAACE,IAAI,CAACC,SAAS,CAAC;IACjD;EACF;AACF,CAAC;AAAC,GA9BInB,QAAQ;AAAA,KAARA,QAAQ;AAgCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}